manifest {
  homePage = 'https://github.com/plantinformatics/pretzel-data/'
  description = 'Pipeline for generating data to be displayed in pretzel'
}


// Global default params, used in configs
params {
  version = '0.1dev' //Pipeline version
  // Pipeline Options
    url = "ftp://ftp.ensemblgenomes.org/pub/plants/release-38/fasta/arabidopsis_thaliana/dna/Arabidopsis_thaliana.TAIR10.dna.toplevel.fa.gz"
  outdir = "./results"
  publishmode = "copy"

      // ENSEMBL PLANTS RELEASE
    eprelease = 39 
    //ADD MORE HERE, KEEPING ORDER in {species,version}, first letter must be in capital
    assemblySpecies = "Arabidopsis_thaliana,Brachypodium_distachyon" //,Oryza_sativa,Hordeum_vulgare"
    assemblyVersion = "TAIR10,v1.0" //,IRGSP-1.0,Hv_IBSC_PGSB_v2"
    //URL BUILDING - STABLE(?)
    urlprefix = "ftp://ftp.ensemblgenomes.org/pub/plants/release-"
    pepsuffix = ".pep.all.fa.gz"
    idxsuffix = ".dna.toplevel.fa.gz.fai"
}

//includeConfig 'input.config'

profiles {
  standard {
    process.executor = 'local'
  }
  modules {
    includeConfig 'conf/modules.config'
  }
  docker {
    includeConfig 'conf/containers.config'
    includeConfig 'conf/docker.config'
  }
  slurm {
    includeConfig 'conf/slurm.config'
    includeConfig 'conf/requirements.config'
  }
  singularity {
    includeConfig 'conf/containers.config'
    includeConfig 'conf/singularity.config'
  }
  singularitymodule {
    process.module = 'singularity/2.4.0'
  }
}

includeConfig 'conf/publish.config'

process {
  errorStrategy = 'ignore' //'terminate'
}

//GENERATE REPORT https://www.nextflow.io/docs/latest/tracing.html#trace-report
report {
    enabled = true
    file = "${params.outdir}/flowinfo/report.html"
}

//GENERATE TIMELINE https://www.nextflow.io/docs/latest/tracing.html#timeline-report
timeline {
    enabled = true
    timeline.file = "${params.outdir}/flowinfo/timeline.html"
}

//GENERATE PIPELINE TRACE https://www.nextflow.io/docs/latest/tracing.html#trace-report
trace {
    enabled = true
    file = "${params.outdir}/flowinfo/trace.txt"
}

//FROM: https://github.com/SciLifeLab/NGI-smRNAseq/blob/29c41afd45011874ed9920c5065ddff93791e3cf/nextflow.config
// Function to ensure that resource requirements don't go beyond a maximum limit
def check_max(obj, type) {
  if(type == 'memory'){
    if(obj.compareTo(params.max_memory) == 1)
      return params.max_memory
    else
      return obj
  } else if(type == 'time'){
    if(obj.compareTo(params.max_time) == 1)
      return params.max_time
    else
      return obj
  } else if(type == 'cpus'){
    return Math.min( obj, params.max_cpus )
  }
}
